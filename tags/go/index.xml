<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>go on Brian Lachniet</title>
    <link>https://blachniet.github.io/tags/go/</link>
    <description>Recent content in go on Brian Lachniet</description>
    <image>
      <url>https://blachniet.github.io/papermod-cover.png</url>
      <link>https://blachniet.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 May 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://blachniet.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Authenticate Cloud Vision Client in Go</title>
      <link>https://blachniet.github.io/posts/auth-cloud-vision-go/</link>
      <pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blachniet.github.io/posts/auth-cloud-vision-go/</guid>
      <description>Google&amp;rsquo;s Cloud Platform documentation is top of the line. Even with the documentation though, it took me some time to figure out how to use the Cloud Vision API from a Go application running on a Compute Engine instance. All the right information is there, but it&amp;rsquo;s scattered. Below I&amp;rsquo;ve compiled this information into a few steps.
Authenticating with the Cloud Vision API involves more setup than the Cloud Datastore, Cloud Pub/Sub and Cloud Storage.</description>
    </item>
    
    <item>
      <title>User Email Addresses with Go-GitHub</title>
      <link>https://blachniet.github.io/posts/go-github-user-email/</link>
      <pubDate>Mon, 08 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blachniet.github.io/posts/go-github-user-email/</guid>
      <description>I&amp;rsquo;ve been working on a new web app lately and decided to allow users to sign up and log in with their GitHub account. I&amp;rsquo;m using go-github to interact with the GitHub API and with this library there are two different ways to get a user&amp;rsquo;s email address.
If you want to get the current user&amp;rsquo;s primary email address, use the Users.ListEmails() method. This method returns all the emails associated with the GitHub user and indicates whether the email address is their Primary address.</description>
    </item>
    
    <item>
      <title>Go-YAML Field Names</title>
      <link>https://blachniet.github.io/posts/go-yaml-field-names/</link>
      <pubDate>Sat, 14 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blachniet.github.io/posts/go-yaml-field-names/</guid>
      <description>I wasted away a good thirty minutes trying to figure out why I couldn&amp;rsquo;t parse my YAML config file this morning using go-yaml.
package main import ( &amp;quot;fmt&amp;quot; &amp;quot;log&amp;quot; &amp;quot;gopkg.in/yaml.v2&amp;quot; ) var configText = ` Message: Welcome UpdateInterval: 5 EmailAddresses: - john.doe@example.com - jane.doe@example.com` type Config struct { Message string UpdateInterval int EmailAddresses []string } func main() { var c Config if err := yaml.Unmarshal([]byte(configText), &amp;amp;c); err != nil { log.</description>
    </item>
    
  </channel>
</rss>
